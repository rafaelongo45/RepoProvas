// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id                  Int @id @default(autoincrement())
  email               String @unique
  password            String
  sessions            Sessions[]
  createdAt           DateTime @default(now())

  @@map("users")
}

model Sessions {
  id                  Int @id @default(autoincrement())
  token               String @unique
  isValid             Boolean @default(true)
  userId              Int
  createdAt           DateTime @default(now())

  users               Users @relation(fields: [userId], references: [id])
}

model Disciplines {
  id                  Int @id @default(autoincrement())
  name                String @unique
  termId              Int
  term                Terms @relation(fields: [termId], references: [id])  
  teacherDiscipline   teachersDisciplines[]
  createdAt           DateTime @default(now())

  @@map("disciplines")
}

model Terms {
  id                  Int @id @default(autoincrement())
  number              Int @unique
  discipline          Disciplines[]
  createdAt           DateTime @default(now())

  @@map("terms")
}

model Categories {
  id                  Int @id @default(autoincrement())
  name                String @unique
  test                Tests[]
  createdAt           DateTime @default(now())

  @@map("categories")
}

model Teachers {
  id                  Int @id @default(autoincrement())
  name                String @unique
  teacherDiscipline   teachersDisciplines[]
  createdAt           DateTime @default(now())

  @@map("teachers")
}

model teachersDisciplines {
  id                  Int @id @default(autoincrement())
  teacherId           Int
  disciplineId        Int
  test                Tests[]
  teacher             Teachers @relation(fields: [teacherId], references: [id])
  discipline          Disciplines @relation(fields: [disciplineId], references: [id])
  createdAt           DateTime @default(now())

  @@unique([teacherId, disciplineId])
}

model Tests {
  id                    Int @id @default(autoincrement())
  name                  String
  pdfUrl                String @unique
  categoryId            Int
  teacherDisciplineId   Int
  category              Categories @relation(fields: [categoryId], references: [id])
  teacherDiscipline     teachersDisciplines @relation(fields: [teacherDisciplineId], references: [id])
  createdAt             DateTime @default(now())

  @@map("tests")
  @@unique([name, teacherDisciplineId])
}